{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-movie-cards-library-stateful/src/components/AddMovie.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport default class AddMovies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.titleRender = () => {\n      const {\n        title\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"title\",\n        \"data-testid\": \"title-input-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, \"T\\xEDtulo\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        \"data-testid\": \"title-input\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.subtitleRender = () => {\n      const {\n        subtitle\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"subtitle\",\n        \"data-testid\": \"subtitle-input-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, \"Subt\\xEDtulo\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"subtitle\",\n        value: subtitle,\n        \"data-testid\": \"subtitle-input\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.imageRender = () => {\n      const {\n        imagePath\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"imagePath\",\n        \"data-testid\": \"image-input-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, \"Imagem\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"imagePath\",\n        value: imagePath,\n        \"data-testid\": \"image-input\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.storylineRender = () => {\n      const {\n        storyline\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"text\",\n        \"data-testid\": \"storyline-input-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, \"Sinopse\", /*#__PURE__*/React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"storyline\",\n        value: storyline,\n        \"data-testid\": \"storyline-input\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.ratingRender = () => /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"rating\",\n      \"data-testid\": \"rating-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, \"Avalia\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"rating\",\n      value: this.state.rating,\n      \"data-testid\": \"rating-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }));\n\n    this.genreRender = () => /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"genre\",\n      \"data-testid\": \"genre-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, \"G\\xEAnero\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"genre\",\n      value: this.state.genre,\n      onChange: this.handleChange,\n      \"data-testid\": \"genre-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      title: \"action\",\n      value: \"action\",\n      \"data-testid\": \"genre-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"A\\xE7\\xE3os\"), /*#__PURE__*/React.createElement(\"option\", {\n      title: \"comedy\",\n      value: \"comedy\",\n      \"data-testid\": \"genre-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"Com\\xE9dia\"), /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": \"genre-option\",\n      title: \"thriller\",\n      value: \"thriller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Suspense\")));\n\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action'\n    };\n  }\n\n  render() {\n    const onClick = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      \"data-testid\": \"add-movie-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, this.titleRender(), this.subtitleRender(), this.imageRender(), this.storylineRender(), this.ratingRender(), this.genreRender(), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"button\",\n      type: \"button\",\n      \"data-testid\": \"send-button\",\n      onClick: () => {\n        onClick(this.state);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"Adicionar filme\"))));\n  }\n\n}\nAddMovies.prototype = {\n  onClick: PropTypes.shape({\n    subtitle: PropTypes.string,\n    title: PropTypes.string,\n    imagePath: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    genre: PropTypes.string\n  })\n};","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-movie-cards-library-stateful/src/components/AddMovie.jsx"],"names":["React","PropTypes","AddMovies","Component","constructor","props","handleChange","event","name","value","target","setState","titleRender","title","state","subtitleRender","subtitle","imageRender","imagePath","storylineRender","storyline","ratingRender","rating","genreRender","genre","render","onClick","prototype","shape","string","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,YAZmB,GAYHC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACG,MAA9B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACH,IAAD,GAAQC;AADI,OAAd;AAGD,KAjBkB;;AAAA,SAmBnBG,WAnBmB,GAmBL,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,0BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,uBAAY,mBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAGD,KAHV;AAIE,uBAAY,aAJd;AAKE,QAAA,QAAQ,EAAG,KAAKP,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAYD,KAjCkB;;AAAA,SAmCnBS,cAnCmB,GAmCF,MAAM;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKF,KAA1B;AACA,0BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAA0B,uBAAY,sBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAGE,QAHV;AAIE,uBAAY,gBAJd;AAKE,QAAA,QAAQ,EAAG,KAAKV,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAYD,KAjDkB;;AAAA,SAmDnBW,WAnDmB,GAmDL,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKJ,KAA3B;AACA,0BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAA2B,uBAAY,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAGI,SAHV;AAIE,uBAAY,aAJd;AAKE,QAAA,QAAQ,EAAG,KAAKZ,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAYD,KAjEkB;;AAAA,SAmEnBa,eAnEmB,GAmED,MAAM;AACtB,YAAM;AAACC,QAAAA;AAAD,UAAc,KAAKN,KAAzB;AACA,0BACE;AACE,QAAA,OAAO,EAAC,MADV;AAEE,uBAAY,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAKE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAGM,SAHV;AAIE,uBAAY,iBAJd;AAKE,QAAA,QAAQ,EAAG,KAAKd,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAeD,KApFkB;;AAAA,SAsFnBe,YAtFmB,GAsFJ,mBACb;AACE,MAAA,OAAO,EAAC,QADV;AAEE,qBAAY,oBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAKE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAG,KAAKP,KAAL,CAAWQ,MAHrB;AAIE,qBAAY,cAJd;AAKE,MAAA,QAAQ,EAAG,KAAKhB,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAvFiB;;AAAA,SAsGnBiB,WAtGmB,GAsGL,mBACZ;AACE,MAAA,OAAO,EAAC,OADV;AAEE,qBAAY,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAKE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAG,KAAKT,KAAL,CAAWU,KAFrB;AAGE,MAAA,QAAQ,EAAG,KAAKlB,YAHlB;AAIE,qBAAY,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,qBAAY,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eAaE;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,qBAAY,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAoBE;AACE,qBAAY,cADd;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF,CALF,CAvGiB;;AAEjB,SAAKQ,KAAL,GAAa;AACXE,MAAAA,QAAQ,EAAE,EADC;AAEXH,MAAAA,KAAK,EAAE,EAFI;AAGXK,MAAAA,SAAS,EAAE,EAHA;AAIXE,MAAAA,SAAS,EAAE,EAJA;AAKXE,MAAAA,MAAM,EAAE,CALG;AAMXE,MAAAA,KAAK,EAAE;AANI,KAAb;AAQD;;AAiIDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,KAAKrB,KAArB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,qBAAY,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKO,WAAL,EADJ,EAEI,KAAKG,cAAL,EAFJ,EAGI,KAAKE,WAAL,EAHJ,EAII,KAAKE,eAAL,EAJJ,EAKI,KAAKE,YAAL,EALJ,EAMI,KAAKE,WAAL,EANJ,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,qBAAY,aAHd;AAIE,MAAA,OAAO,EAAG,MAAM;AAAEG,QAAAA,OAAO,CAAC,KAAKZ,KAAN,CAAP;AAAsB,OAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAPF,CADF,CADF;AAsBD;;AApKoD;AAuKvDZ,SAAS,CAACyB,SAAV,GAAsB;AACpBD,EAAAA,OAAO,EAAEzB,SAAS,CAAC2B,KAAV,CAAgB;AACvBZ,IAAAA,QAAQ,EAAEf,SAAS,CAAC4B,MADG;AAEvBhB,IAAAA,KAAK,EAAEZ,SAAS,CAAC4B,MAFM;AAGvBX,IAAAA,SAAS,EAAEjB,SAAS,CAAC4B,MAHE;AAIvBT,IAAAA,SAAS,EAAEnB,SAAS,CAAC4B,MAJE;AAKvBP,IAAAA,MAAM,EAAErB,SAAS,CAAC6B,MALK;AAMvBN,IAAAA,KAAK,EAAEvB,SAAS,CAAC4B;AANM,GAAhB;AADW,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class AddMovies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  titleRender = () => {\n    const { title } = this.state;\n    return (\n      <label htmlFor=\"title\" data-testid=\"title-input-label\">\n        Título\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={ title }\n          data-testid=\"title-input\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  };\n\n  subtitleRender = () => {\n    const { subtitle } = this.state;\n    return (\n      <label htmlFor=\"subtitle\" data-testid=\"subtitle-input-label\">\n        Subtítulo\n        <input\n          type=\"text\"\n          name=\"subtitle\"\n          value={ subtitle }\n          data-testid=\"subtitle-input\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  }\n\n  imageRender = () => {\n    const { imagePath } = this.state;\n    return (\n      <label htmlFor=\"imagePath\" data-testid=\"image-input-label\">\n        Imagem\n        <input\n          type=\"text\"\n          name=\"imagePath\"\n          value={ imagePath }\n          data-testid=\"image-input\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  }\n\n  storylineRender = () => {\n    const {storyline} = this.state;\n    return (\n      <label\n        htmlFor=\"text\"\n        data-testid=\"storyline-input-label\"\n      >\n        Sinopse\n        <textarea\n          type=\"text\"\n          name=\"storyline\"\n          value={ storyline }\n          data-testid=\"storyline-input\"\n          onChange={ this.handleChange }\n        />\n      </label>\n    );\n  }\n\n  ratingRender = () => (\n    <label\n      htmlFor=\"rating\"\n      data-testid=\"rating-input-label\"\n    >\n      Avaliação\n      <input\n        type=\"number\"\n        name=\"rating\"\n        value={ this.state.rating }\n        data-testid=\"rating-input\"\n        onChange={ this.handleChange }\n      />\n    </label>\n  );\n\n  genreRender = () => (\n    <label\n      htmlFor=\"genre\"\n      data-testid=\"genre-input-label\"\n    >\n      Gênero\n      <select\n        name=\"genre\"\n        value={ this.state.genre }\n        onChange={ this.handleChange }\n        data-testid=\"genre-input\"\n      >\n        <option\n          title=\"action\"\n          value=\"action\"\n          data-testid=\"genre-option\"\n        >\n          Açãos\n        </option>\n        <option\n          title=\"comedy\"\n          value=\"comedy\"\n          data-testid=\"genre-option\"\n        >\n          Comédia\n        </option>\n        <option\n          data-testid=\"genre-option\"\n          title=\"thriller\"\n          value=\"thriller\"\n        >\n          Suspense\n        </option>\n      </select>\n    </label>\n  );\n\n  render() {\n    const onClick = this.props;\n    return (\n      <section>\n        <form data-testid=\"add-movie-form\">\n          { this.titleRender() }\n          { this.subtitleRender() }\n          { this.imageRender() }\n          { this.storylineRender() }\n          { this.ratingRender() }\n          { this.genreRender() }\n          <div>\n            <button\n              id=\"button\"\n              type=\"button\"\n              data-testid=\"send-button\"\n              onClick={ () => { onClick(this.state); } }\n            >\n              Adicionar filme\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nAddMovies.prototype = {\n  onClick: PropTypes.shape({\n    subtitle: PropTypes.string,\n    title: PropTypes.string,\n    imagePath: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    genre: PropTypes.string,\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}