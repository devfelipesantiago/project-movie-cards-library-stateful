{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\nimport movies from '../data';\nexport default class MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = () => {};\n\n    this.onSearchTextChange = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        searchText: value\n      });\n    };\n\n    this.onBookmarkedChange = ({\n      target\n    }) => {\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const movieFilter = movies.filter(movie => movie.bookmarked === value);\n      this.setState({\n        bookmarkedOnly: value,\n        movies: movieFilter // quando value for true deve ser renderizado somente os favoritos\n\n      });\n    };\n\n    this.onSelectedGenreChange = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        selectedGenre: value\n      });\n    };\n\n    const {\n      movies: _movies\n    } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: _movies\n    };\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: searchText,\n      onSearchTextChange: this.onSearchTextChange,\n      bookmarkedOnly: bookmarkedOnly,\n      onBookmarkedChange: this.onBookmarkedChange,\n      selectedGenre: selectedGenre,\n      onSelectedGenreChange: this.onSelectedGenreChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf.isRequired\n};","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","PropTypes","SearchBar","MovieList","AddMovie","movies","MovieLibrary","Component","constructor","props","onClick","onSearchTextChange","event","value","target","setState","searchText","onBookmarkedChange","type","checked","movieFilter","filter","movie","bookmarked","bookmarkedOnly","onSelectedGenreChange","selectedGenre","state","render","propTypes","arrayOf","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,eAAe,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,OAXmB,GAWT,MAAM,CAAE,CAXC;;AAAA,SAanBC,kBAbmB,GAaGC,KAAD,IAAW;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAYD,KAAK,CAACE,MAAxB;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEH;AADA,OAAd;AAGD,KAlBkB;;AAAA,SAoBnBI,kBApBmB,GAoBE,CAAC;AAAEH,MAAAA;AAAF,KAAD,KAAgB;AACnC,YAAMD,KAAK,GAAGC,MAAM,CAACI,IAAP,KAAgB,UAAhB,GAA6BJ,MAAM,CAACK,OAApC,GAA8CL,MAAM,CAACD,KAAnE;AACA,YAAMO,WAAW,GAAGf,MAAM,CAACgB,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,UAAN,KAAqBV,KAA9C,CAApB;AAEA,WAAKE,QAAL,CAAc;AACZS,QAAAA,cAAc,EAAEX,KADJ;AAEZR,QAAAA,MAAM,EAAEe,WAFI,CAGZ;;AAHY,OAAd;AAKD,KA7BkB;;AAAA,SA+BrBK,qBA/BqB,GA+BIb,KAAD,IAAW;AACjC,YAAM;AAAEC,QAAAA;AAAF,UAAYD,KAAK,CAACE,MAAxB;AACA,WAAKC,QAAL,CAAc;AACZW,QAAAA,aAAa,EAAEb;AADH,OAAd;AAGD,KApCoB;;AAEjB,UAAM;AAAER,MAAAA,MAAM,EAANA;AAAF,QAAa,KAAKI,KAAxB;AACA,SAAKkB,KAAL,GAAa;AACXX,MAAAA,UAAU,EAAE,EADD;AAEXQ,MAAAA,cAAc,EAAE,KAFL;AAGXE,MAAAA,aAAa,EAAE,EAHJ;AAIXrB,MAAAA,MAAM,EAANA;AAJW,KAAb;AAMD;;AA6BHuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA;AAAF,QAAa,KAAKsB,KAAxB;AACA,UAAM;AAAEX,MAAAA,UAAF;AAAcQ,MAAAA,cAAd;AAA8BE,MAAAA;AAA9B,QAAgD,KAAKC,KAA3D;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,UAAU,EAAGX,UADf;AAEE,MAAA,kBAAkB,EAAG,KAAKL,kBAF5B;AAGE,MAAA,cAAc,EAAGa,cAHnB;AAIE,MAAA,kBAAkB,EAAG,KAAKP,kBAJ5B;AAKE,MAAA,aAAa,EAAGS,aALlB;AAME,MAAA,qBAAqB,EAAG,KAAKD,qBAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAGpB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAG,KAAKK,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD;;AAxDyD;AA2D1DJ,YAAY,CAACuB,SAAb,GAAyB;AACvBxB,EAAAA,MAAM,EAAEJ,SAAS,CAAC6B,OAAV,CAAkBC;AADH,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\nimport movies from '../data';\n\nexport default class MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n  }\n\n  onClick = () => {};\n\n  onSearchTextChange = (event) => {\n    const { value } = event.target;\n    this.setState({\n      searchText: value,\n    });\n  };\n\n  onBookmarkedChange = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const movieFilter = movies.filter((movie) => movie.bookmarked === value);\n\n    this.setState({\n      bookmarkedOnly: value,\n      movies: movieFilter,\n      // quando value for true deve ser renderizado somente os favoritos\n    });\n  };\n\nonSelectedGenreChange = (event) => {\n  const { value } = event.target;\n  this.setState({\n    selectedGenre: value,\n  });\n};\n\nrender() {\n  const { movies } = this.state;\n  const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n  return (\n    <div>\n      <SearchBar\n        searchText={ searchText }\n        onSearchTextChange={ this.onSearchTextChange }\n        bookmarkedOnly={ bookmarkedOnly }\n        onBookmarkedChange={ this.onBookmarkedChange }\n        selectedGenre={ selectedGenre }\n        onSelectedGenreChange={ this.onSelectedGenreChange }\n      />\n      <MovieList movies={ movies } />\n      <AddMovie onClick={ this.onClick } />\n    </div>\n  );\n}\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}